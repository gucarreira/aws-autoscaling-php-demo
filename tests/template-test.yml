Resources:
  ## VPC public (subnet, route table, IGW) ##
  PubPrivateVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName']]
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref PubPrivateVPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
        CidrBlock: 172.31.0.0/24
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName', Public]]
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join [_, [!Ref 'AWS::StackName']]
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref PubPrivateVPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref PubPrivateVPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  ## Locust master (EC2 instance, elastic ip) ##

  ## Locust workers (EC2 instances) ##

  ## Outputs ##
  Outputs:
  PubPrivateVPCID:
    Description: VPC ID
    Value: !Ref "PubPrivateVPC"
    Export:
      Name: LocustVPCID
  PublicSubnetID:
    Description: Public Subnet A ID
    Value: !Ref "PublicSubnet"
    Export:
      Name: LocustPublicSubnetID